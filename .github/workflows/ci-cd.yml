name: Build and Deploy Flask App

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Git metadata
        id: gitmeta
        run: |
          echo "GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "GIT_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "GIT_MESSAGE=$(git log -1 --pretty=%B | head -n 1)" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: imnasim31415/vm-web-app:latest
          build-args: |
            GIT_BRANCH=${{ env.GIT_BRANCH }}
            GIT_COMMIT=${{ env.GIT_COMMIT }}
            GIT_MESSAGE=${{ env.GIT_MESSAGE }}

  deploy-vm1:
    needs: build-and-push
    runs-on: [self-hosted, vm1]
    steps:
      - name: Deploy on VM 1 using Docker
        run: |
          docker stop vm-web-app || true
          docker rm vm-web-app || true
          docker pull imnasim31415/vm-web-app:latest
          docker run -d \
            -p 5000:5000 \
            --name vm-web-app \
            -v /etc/hostname:/host_hostname:ro \
            imnasim31415/vm-web-app:latest

  deploy-vm2:
    needs: build-and-push
    runs-on: [self-hosted, vm2]
    steps:
      - name: Deploy on VM 2 using Docker
        run: |
          docker stop vm-web-app || true
          docker rm vm-web-app || true
          docker pull imnasim31415/vm-web-app:latest
          docker run -d \
            -p 5000:5000 \
            --name vm-web-app \
            -v /etc/hostname:/host_hostname:ro \
            imnasim31415/vm-web-app:latest

  deploy-vm3:
    needs: build-and-push
    runs-on: [self-hosted, vm3]
    steps:
      - name: Deploy on VM 3 using Docker
        run: |
          docker stop vm-web-app || true
          docker rm vm-web-app || true
          docker pull imnasim31415/vm-web-app:latest
          docker run -d \
            -p 5000:5000 \
            --name vm-web-app \
            -v /etc/hostname:/host_hostname:ro \
            imnasim31415/vm-web-app:latest
