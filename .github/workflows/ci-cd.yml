name: CI/CD Pipeline

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: imnasim31415/vm-web-app

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Get short commit hash
        id: vars
        run: echo "commit_hash=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ steps.vars.outputs.commit_hash }}

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ steps.vars.outputs.commit_hash }}

  deploy:
    name: Deploy to 3 VMs
    runs-on: ubuntu-latest
    needs: build-and-push

    strategy:
      matrix:
        vm: [vm1, vm2, vm3]

    steps:
      - name: Set up host variable
        id: set-host
        run: |
          case "${{ matrix.vm }}" in
            vm1) echo "host=${{ secrets.VM1_HOST }}" >> "$GITHUB_OUTPUT" ;;
            vm2) echo "host=${{ secrets.VM2_HOST }}" >> "$GITHUB_OUTPUT" ;;
            vm3) echo "host=${{ secrets.VM3_HOST }}" >> "$GITHUB_OUTPUT" ;;
          esac

      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ steps.set-host.outputs.host }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            docker pull $IMAGE_NAME:latest
            docker stop vm-web-app || true
            docker rm vm-web-app || true
            docker run -d \
              -p 5000:5000 \
              -e VM_HOSTNAME=$(hostname) \
              -e COMMIT_HASH=${{ github.sha }} \
              --name vm-web-app \
              $IMAGE_NAME:latest
